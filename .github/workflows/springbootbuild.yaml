name: Build Pipeline

on: 
  push:
    branches:
      - feature/minikube

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4

      - name: Set Up Java
        id: setup-java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven Dependencies
        id: cache-maven
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build Artifact
        id: build
        run: |
          mvn clean package --file pom.xml
          mkdir -p artifact && cp target/*.jar artifact/

      - name: Upload Artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: artifact/
          retention-days: 30

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4

      - name: Download Maven Artifact
        id: downloadArtifact
        uses: actions/download-artifact@v4
        with:
          name: package
          path: artifact/

      - name: Build Docker Image
        id: buildDockerImage
        run: |
          docker build -t springboothello:v1 .

      - name: Docker image tagging
        id: dockerImageTag
        run: |
          docker tag springboothello:v1 naresh240/springboothello:v1
    
      - name: Docker image push
        id: dockerImagePush
        run: |
          docker login -u naresh240 -p ${{ secrets.DOCKER_PASSWORD }}
          docker push naresh240/springboothello:v1
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout Repository
        id: checkout
        uses: actions/checkout@v4

      - name: Start minikube
        uses: medyagh/setup-minikube@master

      - name: Try the cluster !
        run: kubectl get pods -A

      - name: Deploy to minikube
        run: |
          kubectl apply -f deploy/deployment.yaml
          kubectl apply -f deploy/service.yaml
          kubectl wait --for=condition=ready pod -l app=springboot-hello

      - name: Test service URLs
        run: |
          minikube service list
          minikube service springboot-hello --url
          echo "------------------opening the service------------------"
          curl $(minikube service springboot-hello --url)